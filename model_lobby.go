/*
Blazium API

API for managing lobbies and game sessions.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Lobby type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Lobby{}

// Lobby struct for Lobby
type Lobby struct {
	// Unique identifier for the lobby.
	Id *string `json:"id,omitempty"`
	// Name of the lobby.
	Name *string `json:"name,omitempty"`
	// ID of the lobby host.
	HostId *string `json:"host_id,omitempty"`
	// Name of the lobby host.
	HostName *string `json:"host_name,omitempty"`
	// Indicates if the lobby is sealed.
	Sealed *bool `json:"sealed,omitempty"`
	// Maximum number of players allowed in the lobby.
	MaxPlayers *int32 `json:"max_players,omitempty"`
	// Current number of players in the lobby.
	Players *int32 `json:"players,omitempty"`
	// Timestamp of when the lobby was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Indicates if the lobby has a password.
	HasPassword *bool `json:"has_password,omitempty"`
	// Tags associated with the lobby.
	Tags []string `json:"tags,omitempty"`
}

// NewLobby instantiates a new Lobby object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLobby() *Lobby {
	this := Lobby{}
	return &this
}

// NewLobbyWithDefaults instantiates a new Lobby object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLobbyWithDefaults() *Lobby {
	this := Lobby{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Lobby) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Lobby) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Lobby) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Lobby) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Lobby) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Lobby) SetName(v string) {
	o.Name = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *Lobby) GetHostId() string {
	if o == nil || IsNil(o.HostId) {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *Lobby) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *Lobby) SetHostId(v string) {
	o.HostId = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *Lobby) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *Lobby) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *Lobby) SetHostName(v string) {
	o.HostName = &v
}

// GetSealed returns the Sealed field value if set, zero value otherwise.
func (o *Lobby) GetSealed() bool {
	if o == nil || IsNil(o.Sealed) {
		var ret bool
		return ret
	}
	return *o.Sealed
}

// GetSealedOk returns a tuple with the Sealed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetSealedOk() (*bool, bool) {
	if o == nil || IsNil(o.Sealed) {
		return nil, false
	}
	return o.Sealed, true
}

// HasSealed returns a boolean if a field has been set.
func (o *Lobby) HasSealed() bool {
	if o != nil && !IsNil(o.Sealed) {
		return true
	}

	return false
}

// SetSealed gets a reference to the given bool and assigns it to the Sealed field.
func (o *Lobby) SetSealed(v bool) {
	o.Sealed = &v
}

// GetMaxPlayers returns the MaxPlayers field value if set, zero value otherwise.
func (o *Lobby) GetMaxPlayers() int32 {
	if o == nil || IsNil(o.MaxPlayers) {
		var ret int32
		return ret
	}
	return *o.MaxPlayers
}

// GetMaxPlayersOk returns a tuple with the MaxPlayers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetMaxPlayersOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPlayers) {
		return nil, false
	}
	return o.MaxPlayers, true
}

// HasMaxPlayers returns a boolean if a field has been set.
func (o *Lobby) HasMaxPlayers() bool {
	if o != nil && !IsNil(o.MaxPlayers) {
		return true
	}

	return false
}

// SetMaxPlayers gets a reference to the given int32 and assigns it to the MaxPlayers field.
func (o *Lobby) SetMaxPlayers(v int32) {
	o.MaxPlayers = &v
}

// GetPlayers returns the Players field value if set, zero value otherwise.
func (o *Lobby) GetPlayers() int32 {
	if o == nil || IsNil(o.Players) {
		var ret int32
		return ret
	}
	return *o.Players
}

// GetPlayersOk returns a tuple with the Players field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetPlayersOk() (*int32, bool) {
	if o == nil || IsNil(o.Players) {
		return nil, false
	}
	return o.Players, true
}

// HasPlayers returns a boolean if a field has been set.
func (o *Lobby) HasPlayers() bool {
	if o != nil && !IsNil(o.Players) {
		return true
	}

	return false
}

// SetPlayers gets a reference to the given int32 and assigns it to the Players field.
func (o *Lobby) SetPlayers(v int32) {
	o.Players = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Lobby) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Lobby) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Lobby) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetHasPassword returns the HasPassword field value if set, zero value otherwise.
func (o *Lobby) GetHasPassword() bool {
	if o == nil || IsNil(o.HasPassword) {
		var ret bool
		return ret
	}
	return *o.HasPassword
}

// GetHasPasswordOk returns a tuple with the HasPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetHasPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPassword) {
		return nil, false
	}
	return o.HasPassword, true
}

// HasHasPassword returns a boolean if a field has been set.
func (o *Lobby) HasHasPassword() bool {
	if o != nil && !IsNil(o.HasPassword) {
		return true
	}

	return false
}

// SetHasPassword gets a reference to the given bool and assigns it to the HasPassword field.
func (o *Lobby) SetHasPassword(v bool) {
	o.HasPassword = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Lobby) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Lobby) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Lobby) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Lobby) SetTags(v []string) {
	o.Tags = v
}

func (o Lobby) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Lobby) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.Sealed) {
		toSerialize["sealed"] = o.Sealed
	}
	if !IsNil(o.MaxPlayers) {
		toSerialize["max_players"] = o.MaxPlayers
	}
	if !IsNil(o.Players) {
		toSerialize["players"] = o.Players
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.HasPassword) {
		toSerialize["has_password"] = o.HasPassword
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableLobby struct {
	value *Lobby
	isSet bool
}

func (v NullableLobby) Get() *Lobby {
	return v.value
}

func (v *NullableLobby) Set(val *Lobby) {
	v.value = val
	v.isSet = true
}

func (v NullableLobby) IsSet() bool {
	return v.isSet
}

func (v *NullableLobby) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLobby(val *Lobby) *NullableLobby {
	return &NullableLobby{value: val, isSet: true}
}

func (v NullableLobby) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLobby) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


